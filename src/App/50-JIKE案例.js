/**
 * 50-JIKE案例
 * 
 * 1.登录-静态结构
 * 2.登录-表单校验
 * 3.登录-获取表单数据
 * 4.登录-封装request请求模块
 * 5.登录-请求登录接口获取token
 * 6.登录-登录后继逻辑
 * 7.登录-token持久化
 * 8.登录-封装token的存取删方法
 * 9.登录-axios请求拦截器注入token
 * 10.登录-使用AuthRoute组件做路由权限控制
 * 11.Layout-静态结构
 * 12.Layout-二级路由
 * 13.Layout-点击菜单跳转路由
 * 14.Layout-根据路由高亮菜单
 * 15.Layout-展示用户信息
 * 16.Layout-退出登录
 * 17.Layout-处理token失效
 * 18.Home-Echarts基础图表
 * 19.Home-Echarts组件封装
 * 20.架构-封装API模块
 * 21.文章发布-静态结构
 * 22.文章发布-富文本编辑器
 * 23.文章发布-接口获取频道数据
 * 24.文章发布-收集表单数据提交表单
 * 25.文章发布-上传文章封面
 * 26.文章发布-切换封面类型
 * 27.文章发布-限制图版上传数量
 * 28.文章发布-发布带封面的文章
 * 29.文章列表-静态结构
 * 30.文章列表-通过自定义hook获取频道列表
 * 31.文章列表-table文章列表
 * 32.文章列表-适配table文章状态
 * 33.文章列表-筛选功能
 * 34.文章列表-分页功能
 * 35.文章列表-删除功能
 */

function App() {
  return (
    <div className="App">
      50-JIKE案例
    </div>
  );
}

export default App;